{"version":3,"sources":["components/Section/Section.js","components/FeedbackOptions/FeedbackOptions.js","components/Notification/Notification.js","components/Statistics/Statistics.js","App.js","index.js","components/Statistics/Statistics.module.css","components/FeedbackOptions/FeedbackOptions.module.css","components/Section/Section.module.css"],"names":["Section","title","children","className","styles","FeedbackOptions","options","onLeaveFeedback","div","Object","keys","map","value","type","name","onClick","button","Notification","message","Statistics","good","neutral","bad","total","positivePercentage","statistics","text","App","state","handleClickIncrement","e","currentTarget","setState","prevState","totalIncrement","positiveFeedback","Math","floor","this","React","Component","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"oPAUeA,EAPC,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OACZ,qCACA,oBAAIC,UAAWC,IAAOH,MAAtB,SAA8BA,IAC1B,8BAAMC,Q,gBCmBCG,EArBS,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,gBAAZ,OACtB,qBAAKJ,UAAWC,IAAOI,IAAvB,SAEUC,OAAOC,KAAKJ,GAASK,KAAI,SAAAC,GAAK,OAC3B,wBACIC,KAAK,SAELC,KAAMF,EACVG,QAASR,EACXJ,UAAWC,IAAOY,OALhB,SAMKJ,GAJIA,S,gBCHTK,EAJM,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OACjB,4BAAIA,KCyBOC,EAvBI,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,QAASC,EAAlB,EAAkBA,IAAKC,EAAvB,EAAuBA,MAAOC,EAA9B,EAA8BA,mBAA9B,OAGf,qBAAKrB,UAAWC,IAAOqB,WAAvB,SACGF,EAAQ,EACT,qCAAE,uBAAMpB,UAAWC,IAAOsB,KAAxB,mBAAqCN,KAC7B,uBAAMjB,UAAWC,IAAOsB,KAAxB,sBAAwCL,KACxC,uBAAMlB,UAAWC,IAAOsB,KAAxB,kBAAoCJ,KAChC,uBAAMnB,UAAWC,IAAOsB,KAAxB,oBAAsCH,KACtC,uBAAMpB,UAAWC,IAAOsB,KAAxB,gCAAkDF,EAAlD,UAAkF,cAAC,EAAD,CAAcN,QAAQ,yBCkD7GS,E,4MAtDbC,MAAQ,CACNR,KAAM,EACNE,IAAK,EACLD,QAAQ,G,EAIVQ,qBAAuB,SAACC,GACtB,IAAQhB,EAASgB,EAAEC,cAAXjB,KACR,EAAKkB,UAAS,SAACC,GAAD,sBACZnB,EAAOmB,EAAUnB,GAAQ,O,EAI5BoB,eAAiB,WAEZ,MAA+B,EAAKN,MACpC,OADA,EAAQR,KAAR,EAAcC,QAAd,EAAuBC,K,EAK7Ba,iBAAmB,WACb,MAA+B,EAAKP,MAA5BR,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IAEvB,OAAOc,KAAKC,MAAc,IAAPjB,GAAeA,EAAOE,EAAMD,K,4CAKrD,WACE,OACA,qCACA,cAAC,EAAD,CAASpB,MAAM,wBAAf,SACE,cAAC,EAAD,CAAiBK,QAASgC,KAAKV,MAAOrB,gBAAiB+B,KAAKT,yBAG1D,cAAC,EAAD,CAAS5B,MAAM,aAAf,SACE,cAAC,EAAD,CACEmB,KAAMkB,KAAKV,MAAMR,KACjBC,QAASiB,KAAKV,MAAMP,QACpBC,IAAKgB,KAAKV,MAAMN,IAChBC,MAAOe,KAAKJ,iBACZV,mBAAoBc,KAAKH,8B,GA3CnBI,IAAMC,WCNxBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCP1BC,EAAOC,QAAU,CAAC,KAAO,yBAAyB,WAAa,iC,kBCA/DD,EAAOC,QAAU,CAAC,IAAM,6BAA6B,OAAS,kC,kBCA9DD,EAAOC,QAAU,CAAC,MAAQ,0B","file":"static/js/main.fbfa6e18.chunk.js","sourcesContent":["import React from \"react\";\r\nimport styles from './Section.module.css';\r\n\r\nconst Section = ({ title, children }) => (\r\n    <>\r\n    <h1 className={styles.title}>{title}</h1>\r\n        <div>{children}</div>\r\n    </>\r\n)\r\n\r\nexport default Section","import React from 'react';  \r\nimport PropTypes from \"prop-types\";\r\nimport styles from './FeedbackOptions.module.css';\r\n\r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => (\r\n  <div className={styles.div}>\r\n    {/* Звернути УВАГУ!!!!! Мепаєм ключі обєкту */}\r\n           {Object.keys(options).map(value => (\r\n               <button\r\n                   type='button'\r\n                   key={value}\r\n                   name={value}\r\n               onClick={onLeaveFeedback}\r\n             className={styles.button}>\r\n                   {value}\r\n               </button>\r\n           ))}\r\n      </div>\r\n)\r\n\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.object.isRequired,\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default FeedbackOptions;","import React from 'react';\r\n\r\n\r\nconst Notification = ({ message }) => (\r\n    <p>{message}</p>\r\n)\r\n\r\nexport default Notification;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Statistics.module.css';\r\nimport Notification from '../Notification/Notification';\r\n\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => \r\n(\r\n  \r\n    <div className={styles.statistics}>\r\n      {total > 0 ?\r\n      <><span className={styles.text}>Good: {good}</span>\r\n                <span className={styles.text}>Neutral: {neutral}</span>\r\n                <span className={styles.text}>Bad: {bad}</span>\r\n                    <span className={styles.text}>Total: {total}</span>\r\n                    <span className={styles.text}>Positive feedback: {positivePercentage}%</span></>: <Notification message=\"No feedback given\" />}\r\n                    \r\n    </div>\r\n  )\r\n\r\n\r\nStatistics.propTypes = {\r\n    good: PropTypes.number.isRequired,\r\n    bad: PropTypes.number.isRequired,\r\n    neutral: PropTypes.number.isRequired,\r\n    total: PropTypes.number.isRequired,\r\n  positivePercentage: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Statistics;","import React from \"react\";\nimport Section from './components/Section/Section';\nimport FeedbackOptions from './components/FeedbackOptions/FeedbackOptions';\nimport Statistics from './components/Statistics/Statistics';\n\n\n\n\n\n\nclass App extends React.Component {\n  state = {\n    good: 0,\n    bad: 0,\n    neutral:0,\n  }\n\n  // ЗВЕРНУТИ УВАГУ!!!!!\n  handleClickIncrement = (e) => {\n    const { name } = e.currentTarget;\n    this.setState((prevState) => ({\n     [name]: prevState[name] + 1,\n    }));\n  }\n\n   totalIncrement = () => {\n        // деструктиризуємо елементи обєкту \n        const { good, neutral, bad } = this.state;\n        return good + neutral + bad;\n        // return this.state.good + this.state.bad + this.state.nautral;\n    };\n\n  positiveFeedback = () => {\n        const { good, neutral, bad } = this.state;\n        // Процентове співвідношення елементів\n        return Math.floor((good * 100) / (good + bad + neutral))\n    };\n\n  \n\n  render() {\n    return (\n    <>\n    <Section title=\"Please leave feedback\">\n      <FeedbackOptions options={this.state} onLeaveFeedback={this.handleClickIncrement}/>\n        </Section>\n\n        <Section title=\"Statistics\">\n          <Statistics\n            good={this.state.good}\n            neutral={this.state.neutral}\n            bad={this.state.bad}\n            total={this.totalIncrement()}\n            positivePercentage={this.positiveFeedback()}/>\n        \n        </Section>\n        \n        \n    </>\n  \n  )\n    \n}\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"Statistics_text__1R1TX\",\"statistics\":\"Statistics_statistics__3Zu-4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"div\":\"FeedbackOptions_div__3dDCH\",\"button\":\"FeedbackOptions_button__3ICrB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Section_title__xJlHZ\"};"],"sourceRoot":""}